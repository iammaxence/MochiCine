{"ast":null,"code":"var _jsxFileName = \"/home/maxlamenace/eclipse_work2/MochiCine/React/src/Actualite.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport \"./Actualite.css\";\nimport './Calendrier.css';\nimport StarRatings from '../node_modules/react-star-ratings';\nimport favEmpty from './icons/favEmpty.png';\nimport favFull from './icons/favFull.png';\n\nclass Actualite extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topmovies: []\n    };\n  }\n\n  componentDidMount() {\n    // Recuperation top series et films\n    let key = \"a3be1be132d237a0716cc27bdae1b2f0\";\n    let nbfilms = 5;\n    axios.get(\"http://localhost:8080/MochiCine/TendanceFilms?key=\" + key + \"&count=\" + nbfilms).then(res => this.setState({\n      topmovies: res.data.data\n    }));\n  }\n\n  render() {\n    //On affiche les films\n    let films = this.state.topmovies.map(ex => {\n      let boxFav = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 24\n        }\n      });\n\n      if (this.props.isConnected === true) {\n        // Pour la mise a jour fav : Si pas un favoris de l'utilisateur favEmpty logo sinon favFull\n        let favImg = /*#__PURE__*/React.createElement(\"img\", {\n          src: favEmpty,\n          alt: \"favEmpty\",\n          width: \"20%\",\n          height: \"20%\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 28\n          }\n        });\n\n        if (Array.isArray(this.state.UserFavs) && this.state.UserFavs.includes(ex.original_title)) {\n          favImg = /*#__PURE__*/React.createElement(\"img\", {\n            src: favFull,\n            alt: \"favFull\",\n            width: \"20%\",\n            height: \"20%\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 28\n            }\n          });\n          boxFav = /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 30\n            }\n          }, favImg, /*#__PURE__*/React.createElement(\"button\", {\n            id: \"addfavS\",\n            className: \" btnfav btn btn-rounded waves-effect\",\n            onClick: () => this.handleDeleteFav(ex.id, ex.original_title, \"false\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }\n          }, \"Delete\"));\n        } else {\n          boxFav = /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 30\n            }\n          }, favImg, /*#__PURE__*/React.createElement(\"button\", {\n            id: \"addfavS\",\n            className: \" btnfav btn btn-rounded waves-effect\",\n            onClick: () => this.handleAddFav(ex.id, ex.original_title, \"false\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }\n          }, \"Add\"));\n        }\n      } //Pour les nom de plus de 20 caractere (Evite de surcharger l'Ã©cran d'informations)\n\n\n      let nomRestreint = ex.original_title;\n\n      if (ex.original_title.length > 20) {\n        nomRestreint = ex.original_title.substring(0, 15) + \"...\";\n      }\n\n      const note = ex.vote_average * 5 / 10;\n\n      if (ex.backdrop_path !== null && ex.backdrop_path !== undefined) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"bloc rounded-lg\",\n          key: ex.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"https://image.tmdb.org/t/p/w500/\" + ex.backdrop_path,\n          alt: \"pic_of_\" + ex.title,\n          width: \"100%\",\n          height: \"150\",\n          onClick: () => this.handleDescriptionPage(ex.id, \"true\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"stars\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(StarRatings, {\n          rating: note,\n          starRatedColor: \"yellow\",\n          numberOfStars: 5,\n          name: \"rating\",\n          starDimension: \"20px\",\n          starSpacing: \"1px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"titre\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          id: ex.id,\n          onClick: () => this.handleDescriptionPage(ex.id, \"true\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }\n        }, nomRestreint), boxFav));\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ActualitePage rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topmovie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 24\n      }\n    }, \"TOP FILMS\")), films), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 16\n      }\n    }, \"TOP SERIES\"));\n  }\n\n}\n\nexport default Actualite;","map":{"version":3,"sources":["/home/maxlamenace/eclipse_work2/MochiCine/React/src/Actualite.js"],"names":["React","axios","StarRatings","favEmpty","favFull","Actualite","Component","constructor","props","state","topmovies","componentDidMount","key","nbfilms","get","then","res","setState","data","render","films","map","ex","boxFav","isConnected","favImg","Array","isArray","UserFavs","includes","original_title","handleDeleteFav","id","handleAddFav","nomRestreint","length","substring","note","vote_average","backdrop_path","undefined","title","handleDescriptionPage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport \"./Actualite.css\"\nimport './Calendrier.css';\nimport StarRatings from '../node_modules/react-star-ratings';\nimport favEmpty from './icons/favEmpty.png';\nimport favFull from './icons/favFull.png';\n\nclass Actualite extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= {topmovies : []}\n    }\n\n\ncomponentDidMount(){\n    // Recuperation top series et films\n    let key = \"a3be1be132d237a0716cc27bdae1b2f0\";\n    let nbfilms= 5;\n    axios.get(\"http://localhost:8080/MochiCine/TendanceFilms?key=\"+key+\"&count=\"+nbfilms).then(res=> this.setState({topmovies: res.data.data}));\n\n       \n    }    \n\n\n\n    render(){\n        //On affiche les films\n        let films = this.state.topmovies.map(ex => {\n\n            let boxFav=<div></div>\n            if(this.props.isConnected === true){\n                // Pour la mise a jour fav : Si pas un favoris de l'utilisateur favEmpty logo sinon favFull\n                let favImg=<img src={favEmpty} alt=\"favEmpty\" width=\"20%\" height=\"20%\" />;\n                if (Array.isArray(this.state.UserFavs) && this.state.UserFavs.includes(ex.original_title)){\n                    favImg=<img src={favFull} alt=\"favFull\" width=\"20%\" height=\"20%\" />;\n\n                    boxFav = <div>{favImg}\n                                <button id= \"addfavS\" className=\" btnfav btn btn-rounded waves-effect\" onClick={() => this.handleDeleteFav(ex.id, ex.original_title, \"false\")} >Delete</button>\n                            </div>\n                }else{\n                    boxFav = <div>{favImg}\n                                <button id= \"addfavS\" className=\" btnfav btn btn-rounded waves-effect\" onClick={() => this.handleAddFav(ex.id, ex.original_title, \"false\")} >Add</button>\n                            </div>\n                }\n\n            } \n\n\n\n            //Pour les nom de plus de 20 caractere (Evite de surcharger l'Ã©cran d'informations)\n            let nomRestreint=ex.original_title;\n             if (ex.original_title.length>20){\n                nomRestreint=ex.original_title.substring(0,15)+\"...\";\n            }\n\n\n\n\n            const note= (ex.vote_average*5)/10;\n            \n            if(ex.backdrop_path!==null && ex.backdrop_path!==undefined){\n                return(\n                    \n                    <div className=\"bloc rounded-lg\" key={ex.id}> \n                        <img src={\"https://image.tmdb.org/t/p/w500/\"+ex.backdrop_path} alt={\"pic_of_\"+ex.title} width=\"100%\" height=\"150\" onClick={() => this.handleDescriptionPage(ex.id, \"true\")}/>\n                        <div className=\"stars\">\n                            <StarRatings rating={note} starRatedColor=\"yellow\" numberOfStars={5} name='rating' starDimension=\"20px\"starSpacing=\"1px\">\n                            </StarRatings>\n                        </div>\n                        <div className=\"titre\">\n                            <a id={ex.id} onClick={() => this.handleDescriptionPage(ex.id, \"true\")} >{nomRestreint}</a>\n                            {boxFav}\n                        </div>\n                    </div>\n                   \n                )\n            }    \n        })\n          return(\n            <div className=\"ActualitePage rounded\">\n               <div>\n                   <div className=\"topmovie\">\n                       <strong>TOP FILMS</strong>\n                   </div>\n                   {films}\n               </div>\n               <div>\n                   TOP SERIES\n               </div>\n\n            </div>\n          );\n    }\n}\nexport default Actualite"]},"metadata":{},"sourceType":"module"}