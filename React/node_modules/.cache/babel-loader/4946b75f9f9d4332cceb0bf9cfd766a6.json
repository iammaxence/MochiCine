{"ast":null,"code":"var _jsxFileName = \"/home/neko/git/MochiCine/React/src/MainPage.js\";\nimport React from 'react';\nimport Accueil from './Accueil';\nimport Profil from './Profil';\nimport Login from './Login';\nimport DescriptionPage from './DescriptionPage';\nimport axios from 'axios';\nimport SearchPage from './SearchPage';\n\nclass MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pagecourante: \"Accueil\",\n      isConnected: true,\n      login: \"bob\",\n      keyword: \"\",\n      data: null,\n      isFavoris: []\n    }; //all the bind\n\n    this.setLogin = this.setLogin.bind(this);\n    this.setLogout = this.setLogout.bind(this);\n    this.getLoginPage = this.getLoginPage.bind(this);\n    this.getAccueilPage = this.getAccueilPage.bind(this);\n    this.getProfilPage = this.getProfilPage.bind(this);\n    this.getSearchPage = this.getSearchPage.bind(this);\n    this.getDescriptionPage = this.getDescriptionPage.bind(this);\n    this.addFavoris = this.addFavoris.bind(this);\n    this.deleteFavoris = this.deleteFavoris.bind(this);\n    this.setListFavoris = this.setListFavoris.bind(this);\n  }\n\n  setLogout() {\n    console.log(\"Logout : \" + this.state.login);\n\n    if (this.state.isConnected === true) {\n      const url = new URLSearchParams();\n      url.append(\"login\", this.state.login);\n      axios.get(\"http://localhost:8080/MochiCine/User/Logout?\" + url).then(res => this.result(res));\n    }\n  }\n\n  result(rep) {\n    console.log(rep.data);\n\n    if (rep.data[\"code\"]) {\n      this.setState({\n        statut: \"error\",\n        textError: rep.data[\"message\"]\n      });\n      window.confirm(this.state.textError);\n    } else {\n      console.log(\"result : OK\");\n      this.setState({\n        pagecourante: \"Accueil\",\n        login: \"\",\n        isConnected: false\n      });\n    }\n  }\n\n  setLogin(login) {\n    this.setState({\n      pagecourante: \"Profil\",\n      login: login,\n      isConnected: true\n    });\n  } //Envoie la page de login\n\n\n  getLoginPage() {\n    this.setState({\n      pagecourante: \"Login\"\n    });\n  } //Envoie la page d'accueil\n\n\n  getAccueilPage() {\n    this.setState({\n      pagecourante: \"Accueil\",\n      data: null\n    });\n  } //Envoie la page de profil\n\n\n  getProfilPage() {\n    this.setState({\n      pagecourante: \"Profil\",\n      data: null\n    });\n  }\n\n  getSearchPage(keywordvalue) {\n    this.setState({\n      pagecourante: \"SearchPage\",\n      keyword: keywordvalue\n    }); //console.log(this.state.keyword);\n  }\n\n  getDescriptionPage(data) {\n    this.setState({\n      pagecourante: \"DescriptionPage\",\n      data: data\n    });\n  } //--------- GESTION DES FAVORIS---------------\n\n\n  setListFavoris(list) {\n    this.setState({\n      isFavoris: list\n    });\n  }\n\n  addFavoris(titre, isSerie) {\n    this.state.isFavoris.push(titre);\n    console.log(\"isFavoris : \", isSerie);\n\n    try {\n      const url = new URLSearchParams();\n      url.append('titre', titre);\n      url.append('isSerie', isSerie);\n      url.append('login', this.state.login);\n      axios.get('http://localhost:8080/MochiCine/Favoris/Add?' + url).then(response => this.handleRep(response));\n    } catch (error) {\n      console.log(\"Error addFavoris\");\n    }\n  }\n\n  deleteFavoris(titre, isSerie) {\n    const list = Object.assign([], this.state.isFavoris);\n    list.filter(item => item !== titre);\n    this.setState({\n      isFavoris: list\n    });\n    const url = new URLSearchParams();\n    url.append('id_message', titre);\n    url.append('isSerie', isSerie);\n    url.append('login', this.state.login);\n    axios.get('http://localhost:8080/MochiCine/Favoris/Delete?' + url).then(response => this.handleRep(response));\n  }\n\n  handleRep(rep) {\n    if (rep.data[\"code\"]) {\n      window.confirm(this.state.textError);\n    } else {\n      console.log(rep.data);\n    }\n  } //--------------------------------------------------------\n\n\n  render() {\n    let page = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"Page not found\"));\n\n    if (this.state.pagecourante === \"Profil\" && this.state.isConnected === true) {\n      page = /*#__PURE__*/React.createElement(Profil, {\n        isConnected: this.state.isConnected,\n        login: this.state.login,\n        getLoginPage: this.getLoginPage,\n        getProfilPage: this.getProfilPage,\n        getAccueilPage: this.getAccueilPage,\n        setLogout: this.setLogout,\n        getSearchPage: this.getSearchPage,\n        getDescriptionPage: this.getDescriptionPage,\n        setListFavoris: this.setListFavoris,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      });\n    } else if (this.state.pagecourante === \"Accueil\") {\n      page = /*#__PURE__*/React.createElement(Accueil, {\n        isConnected: this.state.isConnected,\n        login: this.state.login,\n        getLoginPage: this.getLoginPage,\n        getProfilPage: this.getProfilPage,\n        getAccueilPage: this.getAccueilPage,\n        setLogout: this.setLogout,\n        getSearchPage: this.getSearchPage,\n        getDescriptionPage: this.getDescriptionPage,\n        addFavoris: this.addFavoris,\n        deleteFavoris: this.deleteFavoris,\n        listFavoris: this.state.isFavoris,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }\n      });\n    } else if (this.state.pagecourante === \"Login\") {\n      page = /*#__PURE__*/React.createElement(Login, {\n        setLogin: this.setLogin,\n        getAccueilPage: this.getAccueilPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 7\n        }\n      });\n    } else if (this.state.pagecourante === \"DescriptionPage\") {\n      page = /*#__PURE__*/React.createElement(DescriptionPage, {\n        isConnected: this.state.isConnected,\n        data: this.state.data,\n        login: this.state.login,\n        getLoginPage: this.getLoginPage,\n        getProfilPage: this.getProfilPage,\n        getAccueilPage: this.getAccueilPage,\n        setLogout: this.setLogout,\n        addFavoris: this.addFavoris,\n        deleteFavoris: this.deleteFavoris,\n        getSearchPage: this.getSearchPage,\n        listFavoris: this.state.isFavoris,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      });\n    } else if (this.state.pagecourante === \"SearchPage\") {\n      page = /*#__PURE__*/React.createElement(SearchPage, {\n        isConnected: this.state.isConnected,\n        login: this.state.login,\n        getLoginPage: this.getLoginPage,\n        getProfilPage: this.getProfilPage,\n        getAccueilPage: this.getAccueilPage,\n        setLogout: this.setLogout,\n        getSearchPage: this.getSearchPage,\n        keyword: this.state.keyword,\n        getDescriptionPage: this.getDescriptionPage,\n        addFavoris: this.addFavoris,\n        deleteFavoris: this.deleteFavoris,\n        listFavoris: this.state.isFavoris,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return page;\n  }\n\n}\n\nexport default MainPage;","map":{"version":3,"sources":["/home/neko/git/MochiCine/React/src/MainPage.js"],"names":["React","Accueil","Profil","Login","DescriptionPage","axios","SearchPage","MainPage","Component","constructor","props","state","pagecourante","isConnected","login","keyword","data","isFavoris","setLogin","bind","setLogout","getLoginPage","getAccueilPage","getProfilPage","getSearchPage","getDescriptionPage","addFavoris","deleteFavoris","setListFavoris","console","log","url","URLSearchParams","append","get","then","res","result","rep","setState","statut","textError","window","confirm","keywordvalue","list","titre","isSerie","push","response","handleRep","error","Object","assign","filter","item","render","page"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Accueil from './Accueil';\nimport Profil from './Profil';\nimport Login from './Login';\nimport DescriptionPage from './DescriptionPage';\nimport axios from 'axios';\nimport SearchPage from './SearchPage';\n\n\nclass MainPage extends React.Component {\n  constructor(props){\n    super(props);\n    this.state= {pagecourante: \"Accueil\", isConnected: true, login: \"bob\", keyword: \"\", data: null, isFavoris: []};\n    \n    //all the bind\n    this.setLogin = this.setLogin.bind(this);\n    this.setLogout = this.setLogout.bind(this);\n    this.getLoginPage = this.getLoginPage.bind(this);\n    this.getAccueilPage = this.getAccueilPage.bind(this);\n    this.getProfilPage = this.getProfilPage.bind(this);\n    this.getSearchPage= this.getSearchPage.bind(this);\n    this.getDescriptionPage= this.getDescriptionPage.bind(this);\n    this.addFavoris= this.addFavoris.bind(this);\n    this.deleteFavoris= this.deleteFavoris.bind(this);\n    this.setListFavoris=this.setListFavoris.bind(this);\n  }\n  \n\n  setLogout(){\n    console.log(\"Logout : \" + this.state.login);\n    if(this.state.isConnected === true ){\n      const url= new URLSearchParams();\n      url.append(\"login\", this.state.login);\n      axios.get(\"http://localhost:8080/MochiCine/User/Logout?\"+url).then(res=> this.result(res));\n    }\n  }\n\n  result(rep){\n    console.log(rep.data);\n    if(rep.data[\"code\"]){\n        this.setState ({statut: \"error\", textError: rep.data[\"message\"]});\n        window.confirm(this.state.textError);\n    }else{\n        console.log(\"result : OK\");\n        this.setState({pagecourante: \"Accueil\", login: \"\", isConnected: false});\n    }\n  }\n\n  setLogin(login){\n    this.setState({pagecourante: \"Profil\", login:login, isConnected: true});\n  }\n\n  //Envoie la page de login\n  getLoginPage(){\n    this.setState({pagecourante: \"Login\"});\n  }\n\n  //Envoie la page d'accueil\n  getAccueilPage(){\n    this.setState({pagecourante: \"Accueil\", data: null});\n  }\n\n  //Envoie la page de profil\n  getProfilPage(){\n    this.setState({pagecourante: \"Profil\", data: null});\n  }\n  \n  getSearchPage(keywordvalue){\n    this.setState({pagecourante: \"SearchPage\", keyword: keywordvalue});\n    //console.log(this.state.keyword);\n  }\n\n  getDescriptionPage(data){\n    this.setState({pagecourante: \"DescriptionPage\", data: data});\n  }\n\n\n  //--------- GESTION DES FAVORIS---------------\n  setListFavoris(list){\n    this.setState({isFavoris: list});\n  }\n\n  addFavoris(titre, isSerie){\n    this.state.isFavoris.push(titre);\n    console.log(\"isFavoris : \", isSerie);\n    try{\n      const url = new URLSearchParams();\n      url.append('titre', titre);\n      url.append('isSerie', isSerie);\n      url.append('login', this.state.login);\n      axios.get('http://localhost:8080/MochiCine/Favoris/Add?' + url).then(response => this.handleRep(response));\n    }catch(error){\n      console.log(\"Error addFavoris\")\n    }\n  }\n\n  deleteFavoris(titre, isSerie){\n    const list = Object.assign([], this.state.isFavoris);\n    list.filter(item => item !== titre);\n    this.setState({isFavoris: list})\n\n    const url = new URLSearchParams();\n    url.append('id_message', titre);\n    url.append('isSerie', isSerie);\n    url.append('login', this.state.login);\n \t\taxios.get('http://localhost:8080/MochiCine/Favoris/Delete?' + url).then(response => this.handleRep(response));\n  }\n\n  handleRep(rep){\n    if(rep.data[\"code\"]){\n        window.confirm(this.state.textError);\n    }else{\n      console.log(rep.data);\n    }\n  }\n\n\n//--------------------------------------------------------\n\n  render(){\n    let page = <div><h2>Page not found</h2></div> ;  \n\n    if(this.state.pagecourante === \"Profil\" && this.state.isConnected === true){\n      page = \n      <Profil \n        isConnected={this.state.isConnected} \n        login={this.state.login}\n        getLoginPage={this.getLoginPage}\n        getProfilPage={this.getProfilPage}\n        getAccueilPage={this.getAccueilPage} \n        setLogout={this.setLogout}\n        getSearchPage={this.getSearchPage}\n        getDescriptionPage={this.getDescriptionPage} \n        setListFavoris={this.setListFavoris} />;\n\n\n    }else if(this.state.pagecourante === \"Accueil\"){\n      page = \n      <Accueil \n        isConnected={this.state.isConnected}\n        login={this.state.login}\n        getLoginPage={this.getLoginPage}\n        getProfilPage={this.getProfilPage}\n        getAccueilPage={this.getAccueilPage} \n        setLogout={this.setLogout}\n        getSearchPage={this.getSearchPage} \n        getDescriptionPage={this.getDescriptionPage}\n        addFavoris={this.addFavoris}\n        deleteFavoris={this.deleteFavoris}\n        listFavoris={this.state.isFavoris}  /> ;\n\n\n    }else if(this.state.pagecourante === \"Login\"){\n      page = \n      <Login \n        setLogin={this.setLogin}  \n        getAccueilPage={this.getAccueilPage}/>;\n\n\n    }else if(this.state.pagecourante === \"DescriptionPage\"){\n      page = \n        <DescriptionPage  \n          isConnected={this.state.isConnected} \n          data={this.state.data}\n          login={this.state.login}\n          getLoginPage={this.getLoginPage}\n          getProfilPage={this.getProfilPage}\n          getAccueilPage={this.getAccueilPage} \n          setLogout={this.setLogout}\n          addFavoris={this.addFavoris}\n          deleteFavoris={this.deleteFavoris} \n          getSearchPage={this.getSearchPage}\n          listFavoris={this.state.isFavoris} />;\n\n\n    }\n    else if(this.state.pagecourante === \"SearchPage\"){\n      page=\n        <SearchPage\n          isConnected={this.state.isConnected} \n          login={this.state.login}\n          getLoginPage={this.getLoginPage}\n          getProfilPage={this.getProfilPage}\n          getAccueilPage={this.getAccueilPage} \n          setLogout={this.setLogout}\n          getSearchPage={this.getSearchPage}\n          keyword={this.state.keyword} \n          getDescriptionPage={this.getDescriptionPage}\n          addFavoris={this.addFavoris}\n          deleteFavoris={this.deleteFavoris}\n          listFavoris={this.state.isFavoris}  />\n    }\n    \n\n    return(page);\n  }\n\n}\n\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}