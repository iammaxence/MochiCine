{"ast":null,"code":"var _jsxFileName = \"/home/maxlamenace/eclipse_work2/MochiCine/React/src/SearchPage.js\";\nimport React from 'react';\nimport NavBar from './NavBar';\nimport axios from 'axios';\nimport './SearchPage.css';\n\nclass SearchPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.state = {\n      listeRecherche: []\n    };\n    this.addToList = this.addToList.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    axios.get(\"http://localhost:8080/MochiCine/Search?key=a3be1be132d237a0716cc27bdae1b2f0&keyword=\" + this.props.keyword).then(res => this.addToList(res.data.data));\n  }\n\n  componentDidUpdate(prevProps) {\n    //console.log(this.props.keyword+\" == \"+prevProps.keyword);\n    if (this.props.keyword !== prevProps.keyword && this._isMounted === true) {\n      this.setState({\n        listeRecherche: this.props.keyword\n      });\n      axios.get(\"http://localhost:8080/MochiCine/Search?key=a3be1be132d237a0716cc27bdae1b2f0&keyword=\" + this.props.keyword).then(res => this.addToList(res.data.data));\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    this.setState({\n      listeRecherche: []\n    });\n  }\n\n  addToList(res) {\n    //console.log(res);\n    if (this._isMounted) this.setState({\n      listeRecherche: res\n    });else alert(\"nope\");\n  }\n\n  render() {\n    //console.log(document.getElementById(\"recherche\").value);\n    let tmp;\n    console.log(this.state.listeRecherche);\n\n    if (this.state.listeRecherche.length === 0 || this.state.listeRecherche.length === [] || this.state.listeRecherche.length === undefined) {\n      tmp = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 23\n        }\n      }, \"Nothing\"));\n    } else {\n      tmp = this.state.listeRecherche.map(ex => {\n        //console.log(ex);\n        // Parfois c'est title parfois c'est name pour chaque sÃ©ries/films\n        if (ex.backdrop_path !== null && ex.backdrop_path !== undefined) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"affiches\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: \"https://image.tmdb.org/t/p/w500/\" + ex.backdrop_path,\n            alt: \"pic_of_\" + ex.name,\n            width: \"100%\",\n            height: \"150\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"description\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"strong\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }\n          }, \"Titre : \", ex.title, \" \"), /*#__PURE__*/React.createElement(\"strong\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }\n          }, \"Description : \", ex.overview, \" \")));\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      isConnected: this.props.isConnected,\n      getLoginPage: this.props.getLoginPage,\n      setLogout: this.props.setLogout,\n      getProfilPage: this.props.getProfilPage,\n      getAccueilPage: this.props.getAccueilPage,\n      getSearchPage: this.props.getSearchPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"divsearch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, tmp));\n  }\n\n}\n\nexport default SearchPage;","map":{"version":3,"sources":["/home/maxlamenace/eclipse_work2/MochiCine/React/src/SearchPage.js"],"names":["React","NavBar","axios","SearchPage","Component","constructor","props","_isMounted","state","listeRecherche","addToList","bind","componentDidMount","get","keyword","then","res","data","componentDidUpdate","prevProps","setState","componentWillUnmount","alert","render","tmp","console","log","length","undefined","map","ex","backdrop_path","name","title","overview","isConnected","getLoginPage","setLogout","getProfilPage","getAccueilPage","getSearchPage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NavBar from './NavBar';\nimport axios from 'axios';\nimport './SearchPage.css'\n\nclass SearchPage extends React.Component{\n    _isMounted = false\n\n    constructor(props){\n        super(props);\n        this.state={listeRecherche: []};\n        this.addToList=this.addToList.bind(this);\n    }\n\n   \n    componentDidMount(){\n       this._isMounted=true;\n        axios.get(\"http://localhost:8080/MochiCine/Search?key=a3be1be132d237a0716cc27bdae1b2f0&keyword=\"+this.props.keyword).then(res => this.addToList(res.data.data));\n     }\n\n    \n    componentDidUpdate(prevProps){\n        //console.log(this.props.keyword+\" == \"+prevProps.keyword);\n        if(this.props.keyword !== prevProps.keyword && this._isMounted===true){\n            this.setState({listeRecherche: this.props.keyword});\n            axios.get(\"http://localhost:8080/MochiCine/Search?key=a3be1be132d237a0716cc27bdae1b2f0&keyword=\"+this.props.keyword).then(res => this.addToList(res.data.data));\n        }\n    }\n    \n\n    componentWillUnmount(){\n       this._isMounted =false\n       this.setState({listeRecherche: []});\n    }\n\n    addToList(res){\n        //console.log(res);\n        if(this._isMounted)\n            this.setState({listeRecherche: res});\n        else\n            alert(\"nope\");\n    }\n\n    render(){\n        //console.log(document.getElementById(\"recherche\").value);\n        let tmp;\n        console.log(this.state.listeRecherche);\n        \n        if(this.state.listeRecherche.length === 0 || this.state.listeRecherche.length===[] || this.state.listeRecherche.length===undefined ){\n            tmp= <div><strong>Nothing</strong></div>\n        }\n        else{\n            tmp= this.state.listeRecherche.map(ex => {\n                //console.log(ex);\n                // Parfois c'est title parfois c'est name pour chaque sÃ©ries/films\n                if(ex.backdrop_path!==null && ex.backdrop_path!==undefined){\n                    return (\n                        <div>\n                            <div className=\"affiches\">\n                                <img src={\"https://image.tmdb.org/t/p/w500/\"+ex.backdrop_path} alt={\"pic_of_\"+ex.name} width=\"100%\" height=\"150\"/>\n                            </div>\n                            <div className=\"description\">\n                                <strong>Titre : {ex.title} </strong>\n                                <strong>Description : {ex.overview} </strong>\n                            </div>\n                            \n                        </div>\n                    )\n                }\n            })\n        }\n        \n        return(\n            <div className=\"searchPage\">\n                <NavBar \n                    isConnected={this.props.isConnected} \n                    getLoginPage={this.props.getLoginPage}\n                    setLogout={this.props.setLogout}\n                    getProfilPage={this.props.getProfilPage}\n                    getAccueilPage={this.props.getAccueilPage} \n                    getSearchPage={this.props.getSearchPage}/>\n                <div className=\"divsearch\">\n                    {tmp}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchPage;"]},"metadata":{},"sourceType":"module"}