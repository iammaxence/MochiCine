{"ast":null,"code":"var _jsxFileName = \"/home/maxlamenace/PC3R/mochicine/src/Calendrier.js\";\nimport React, { Component } from 'react';\nimport './Calendrier.css';\nimport axios from 'axios';\n\nclass Calendrier extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seriesListe: [],\n      mardiListe: []\n    };\n    this.getSerieById = this.getSerieById.bind(this);\n  }\n\n  componentDidMount() {\n    // Today's date\n    let today = new Date();\n    today.setDate(today.getDate() - 2);\n    today.setHours(0, 0, 0, 0); //console.log(today);\n    //Today release\n    //axios.get(\"https://api.themoviedb.org/3/tv/airing_today?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US&page=1\").then(res=> this.constr(res));\n    //Future release\n\n    axios.get(\"http://localhost:8080/MochiCine/SerieOfTheWeek\").then(res => this.setState({\n      seriesListe: res.data.data\n    })); //let mo=[5];\n\n    /*\n    axios.get(\"https://api.themoviedb.org/3/tv/on_the_air?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US&page=1\").then(res=> res.data.results).then(\n        ex => {\n            \n            //Find the serie to find the date of the last episode\n            //Cette partie est importante car on récupère beaucoup plus d'informations sur chacune des séries, que la requete précédente.\n            ex.map( key =>\n                axios.get(\"https://api.themoviedb.org/3/tv/\"+key.id+\"?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US\").then(\n                v => {\n                    \n                let tvserie=v.data;\n                let exdate= new Date(tvserie.last_air_date);\n                exdate.setHours(0,0,0,0);\n                //console.log(exdate);\n                //console.log(today.getTime()+\"==\"+exdate.getTime());\n                //if (today.getTime()===exdate.getTime()) \n                    //{   \n                        //Black Magic\n                        this.setState({lundiListe: [...this.state.lundiListe, tvserie]});\n                    //} \n                })\n            )\n                \n            });\n    //console.log(this.state.lundiListe);\n    //this.setState({lundiListe: mo});\n    */\n  }\n\n  getSerieById(id) {\n    alert(\"Ici on affiche la description OU on renvoie vers une page html\");\n  }\n\n  render() {\n    let semaine = [\"Dimanche\", \"Lundi\", \"Mardi\", \"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\"];\n    let jour = new Date().getDay(); //let jour=new Date(ex.last_air_date).getDay();\n    //On affiche les séries\n\n    let series = this.state.seriesListe.map(ex => {\n      //console.log(ex);\n      let semaine = [\"Dimanche\", \"Lundi\", \"Mardi\", \"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\"];\n      let jour = new Date(ex.last_air_date).getDay(); //console.log(semaine[jour]);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"test\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"https://image.tmdb.org/t/p/w500/\" + ex.backdrop_path,\n        alt: \"pic_of_\" + ex.name,\n        width: \"100%\",\n        height: \"150\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        id: \"name\",\n        onClick: () => this.getSerieById(ex.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }\n      }, ex.name)));\n    });\n    let tmp = this.state.seriesListe.map(ex => {\n      //console.log(ex);\n      let semaine = [\"Dimanche\", \"Lundi\", \"Mardi\", \"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\"];\n      let jour = new Date(ex.last_air_date).getDay(); //console.log(semaine[jour]);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"test\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"https://image.tmdb.org/t/p/w500/\" + ex.backdrop_path,\n        alt: \"pic_of_\" + ex.name,\n        width: \"100%\",\n        height: \"150\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        id: \"name\",\n        onClick: () => this.getSerieById(ex.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }\n      }, ex.name)));\n    }); //console.log(tmp);\n    //axios.get(\"https://api.themoviedb.org/3/tv/airing_today?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US&page=1\").then(res=> this.constr(res));\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Rectangle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Jours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \" Sortie Series de la semaine \")), series, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Jours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, \" Sorties Films de la semaine \")));\n  }\n\n}\n\nexport default Calendrier;","map":{"version":3,"sources":["/home/maxlamenace/PC3R/mochicine/src/Calendrier.js"],"names":["React","Component","axios","Calendrier","constructor","props","state","seriesListe","mardiListe","getSerieById","bind","componentDidMount","today","Date","setDate","getDate","setHours","get","then","res","setState","data","id","alert","render","semaine","jour","getDay","series","map","ex","last_air_date","backdrop_path","name","tmp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Calendrier.css';\nimport axios from 'axios';\n\nclass Calendrier extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={seriesListe : [], mardiListe: []};\n        this.getSerieById=this.getSerieById.bind(this);\n    }\n\n    componentDidMount(){\n\n        // Today's date\n        let today= new Date();\n        today.setDate(today.getDate()-2);\n        today.setHours(0,0,0,0);\n\n        //console.log(today);\n        //Today release\n        //axios.get(\"https://api.themoviedb.org/3/tv/airing_today?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US&page=1\").then(res=> this.constr(res));\n        \n        //Future release\n        axios.get(\"http://localhost:8080/MochiCine/SerieOfTheWeek\").then(res=> this.setState({seriesListe: res.data.data}));\n        //let mo=[5];\n        /*\n        axios.get(\"https://api.themoviedb.org/3/tv/on_the_air?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US&page=1\").then(res=> res.data.results).then(\n            ex => {\n                \n                //Find the serie to find the date of the last episode\n                //Cette partie est importante car on récupère beaucoup plus d'informations sur chacune des séries, que la requete précédente.\n                ex.map( key =>\n                    axios.get(\"https://api.themoviedb.org/3/tv/\"+key.id+\"?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US\").then(\n                    v => {\n                        \n                    let tvserie=v.data;\n                    let exdate= new Date(tvserie.last_air_date);\n                    exdate.setHours(0,0,0,0);\n                    //console.log(exdate);\n                    //console.log(today.getTime()+\"==\"+exdate.getTime());\n                    //if (today.getTime()===exdate.getTime()) \n                        //{   \n                            //Black Magic\n                            this.setState({lundiListe: [...this.state.lundiListe, tvserie]});\n                        //} \n                    })\n                )\n                    \n                });\n        //console.log(this.state.lundiListe);\n        //this.setState({lundiListe: mo});\n        */\n\t}\n\n\n    getSerieById(id){\n        alert(\"Ici on affiche la description OU on renvoie vers une page html\");\n    }\n\n    \n    \n    render(){\n\n        let semaine=[\"Dimanche\",\"Lundi\",\"Mardi\",\"Mercredi\",\"Jeudi\",\"Vendredi\",\"Samedi\"];\n        let jour= new Date().getDay();\n        //let jour=new Date(ex.last_air_date).getDay();\n        //On affiche les séries\n        let series = this.state.seriesListe.map(ex => {\n            //console.log(ex);\n            let semaine=[\"Dimanche\",\"Lundi\",\"Mardi\",\"Mercredi\",\"Jeudi\",\"Vendredi\",\"Samedi\"];\n            let jour=new Date(ex.last_air_date).getDay();\n            //console.log(semaine[jour]);\n                return(\n                    \n                    <div className=\"test\"> \n                        <img src={\"https://image.tmdb.org/t/p/w500/\"+ex.backdrop_path} alt={\"pic_of_\"+ex.name} width=\"100%\" height=\"150\"/>\n                        <div>\n                            <button id= \"name\" onClick={() => this.getSerieById(ex.id)} >{ex.name}</button>\n                        </div>\n                    </div>\n                   \n                )\n                \n        })\n\n        let tmp = this.state.seriesListe.map(ex => {\n            //console.log(ex);\n            let semaine=[\"Dimanche\",\"Lundi\",\"Mardi\",\"Mercredi\",\"Jeudi\",\"Vendredi\",\"Samedi\"];\n            let jour=new Date(ex.last_air_date).getDay();\n            //console.log(semaine[jour]);\n                return(\n                    \n                    <div className=\"test\"> \n                        <img src={\"https://image.tmdb.org/t/p/w500/\"+ex.backdrop_path} alt={\"pic_of_\"+ex.name} width=\"100%\" height=\"150\"/>\n                        <div>\n                            <button id= \"name\" onClick={() => this.getSerieById(ex.id)} >{ex.name}</button>\n                        </div>\n                    </div>\n                   \n                )\n                \n        })\n\n\n        \n        //console.log(tmp);\n        //axios.get(\"https://api.themoviedb.org/3/tv/airing_today?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US&page=1\").then(res=> this.constr(res));\n        return (\n            <div className=\"Rectangle\">\n                <div className=\"Jours\">\n                    <strong> Sortie Series de la semaine </strong>\n                </div>\n               {series}\n                <div className=\"Jours\">\n                    <strong> Sorties Films de la semaine </strong>\n                </div>\n            </div>  \n        )\n    }\n}\n\nexport default Calendrier;"]},"metadata":{},"sourceType":"module"}