{"ast":null,"code":"var _jsxFileName = \"/home/maxlamenace/eclipse_work2/MochiCine/React/src/Actualite.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport \"./Actualite.css\";\nimport StarRatings from '../node_modules/react-star-ratings';\n\nclass Actualite extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topmovies: [],\n      topseries: []\n    };\n  }\n\n  componentDidMount() {\n    // Recuperation top series et films\n    let key = \"a3be1be132d237a0716cc27bdae1b2f0\";\n    let count = 6;\n    let type = \"movie\";\n    axios.get(\"http://localhost:8080/MochiCine/Tendances?key=\" + key + \"&count=\" + count + \"&type=\" + type).then(res => this.setState({\n      topmovies: res.data.data\n    }));\n    type = \"tv\";\n    axios.get(\"http://localhost:8080/MochiCine/Tendances?key=\" + key + \"&count=\" + count + \"&type=\" + type).then(res => this.setState({\n      topseries: res.data.data\n    }));\n  }\n\n  render() {\n    //On affiche les films\n    let films;\n\n    if (this.state.topmovies === undefined || this.state.topmovies.length === 0) {\n      films = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }, \"Nothing Found\"));\n    } else if (!Array.isArray(this.state.topmovies)) {\n      //Cette condition est obligatoire car lorsque la navbar appel ce composant, il est démonté puis remonté. Il n'est pas monté assez rapidement pour laisser le temps à la requête d'être terminé\n      films = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, \"Nothing Found\"));\n    } else {\n      films = this.state.topmovies.map(ex => {\n        //Pour les nom de plus de 20 caractere (Evite de surcharger l'écran d'informations)\n        let nomRestreint = ex.original_title;\n\n        if (ex.original_title.length > 13) {\n          nomRestreint = ex.original_title.substring(0, 13) + \"...\";\n        }\n\n        const note = ex.vote_average * 5 / 10;\n\n        if (ex.backdrop_path !== null && ex.backdrop_path !== undefined) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"bloctop rounded-lg\",\n            key: ex.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: \"https://image.tmdb.org/t/p/w500/\" + ex.backdrop_path,\n            alt: \"pic_of_\" + ex.title,\n            width: \"100%\",\n            height: \"150\",\n            onClick: () => this.handleDescriptionPage(ex.id, \"true\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"stars\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(StarRatings, {\n            rating: note,\n            starRatedColor: \"yellow\",\n            numberOfStars: 5,\n            name: \"rating\",\n            starDimension: \"20px\",\n            starSpacing: \"1px\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"titre\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            id: ex.id,\n            onClick: () => this.handleDescriptionPage(ex.id, \"true\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }\n          }, nomRestreint)));\n        }\n      });\n    } //On affiche les series\n\n\n    let series = this.state.topseries.map(ex => {\n      //Pour les nom de plus de 20 caractere (Evite de surcharger l'écran d'informations)\n      let nomRestreint = ex.original_name;\n\n      if (ex.original_name.length > 13) {\n        nomRestreint = ex.original_name.substring(0, 13) + \"...\";\n      }\n\n      const note = ex.vote_average * 5 / 10;\n\n      if (ex.backdrop_path !== null && ex.backdrop_path !== undefined) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"bloctop rounded-lg\",\n          key: ex.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"https://image.tmdb.org/t/p/w500/\" + ex.backdrop_path,\n          alt: \"pic_of_\" + ex.name,\n          width: \"100%\",\n          height: \"150\",\n          onClick: () => this.handleDescriptionPage(ex.id, \"true\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"stars\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(StarRatings, {\n          rating: note,\n          starRatedColor: \"yellow\",\n          numberOfStars: 5,\n          name: \"rating\",\n          starDimension: \"20px\",\n          starSpacing: \"1px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"titre\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          id: ex.id,\n          onClick: () => this.handleDescriptionPage(ex.id, \"true\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }\n        }, nomRestreint)));\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ActualitePage rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topmovie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 24\n      }\n    }, \"TOP FILMS\")), films), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topmovie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 24\n      }\n    }, \"TOP SERIES\")), series));\n  }\n\n}\n\nexport default Actualite;","map":{"version":3,"sources":["/home/maxlamenace/eclipse_work2/MochiCine/React/src/Actualite.js"],"names":["React","axios","StarRatings","Actualite","Component","constructor","props","state","topmovies","topseries","componentDidMount","key","count","type","get","then","res","setState","data","render","films","undefined","length","Array","isArray","map","ex","nomRestreint","original_title","substring","note","vote_average","backdrop_path","id","title","handleDescriptionPage","series","original_name","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport \"./Actualite.css\"\nimport StarRatings from '../node_modules/react-star-ratings';\n\n\nclass Actualite extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= {topmovies : [],topseries : []}\n    }\n\n\ncomponentDidMount(){\n    // Recuperation top series et films\n    let key = \"a3be1be132d237a0716cc27bdae1b2f0\";\n    let count= 6;\n    let type= \"movie\";\n    axios.get(\"http://localhost:8080/MochiCine/Tendances?key=\"+key+\"&count=\"+count+\"&type=\"+type).then(res=> this.setState({topmovies: res.data.data}));\n\n    type= \"tv\";\n    axios.get(\"http://localhost:8080/MochiCine/Tendances?key=\"+key+\"&count=\"+count+\"&type=\"+type).then(res=> this.setState({topseries: res.data.data}));\n       \n    }    \n\n\n\n    render(){\n        //On affiche les films\n        let films;\n\n        if (this.state.topmovies === undefined || this.state.topmovies.length === 0 ){\n            films= <div><strong>Nothing Found</strong></div>\n        }\n        else if (!Array.isArray(this.state.topmovies)) { //Cette condition est obligatoire car lorsque la navbar appel ce composant, il est démonté puis remonté. Il n'est pas monté assez rapidement pour laisser le temps à la requête d'être terminé\n            films= <div><strong>Nothing Found</strong></div>\n        } \n        else {\n            films = this.state.topmovies.map(ex => {\n\n            //Pour les nom de plus de 20 caractere (Evite de surcharger l'écran d'informations)\n            let nomRestreint=ex.original_title;\n             if (ex.original_title.length>13){\n                nomRestreint=ex.original_title.substring(0,13)+\"...\";\n            }\n\n\n\n\n            const note= (ex.vote_average*5)/10;\n            \n            if(ex.backdrop_path!==null && ex.backdrop_path!==undefined){\n                return(\n                    \n                    <div className=\"bloctop rounded-lg\" key={ex.id}> \n                        <img src={\"https://image.tmdb.org/t/p/w500/\"+ex.backdrop_path} alt={\"pic_of_\"+ex.title} width=\"100%\" height=\"150\" onClick={() => this.handleDescriptionPage(ex.id, \"true\")}/>\n                        <div className=\"stars\">\n                            <StarRatings rating={note} starRatedColor=\"yellow\" numberOfStars={5} name='rating' starDimension=\"20px\"starSpacing=\"1px\">\n                            </StarRatings>\n                        </div>\n                        <div className=\"titre\">\n                            <a id={ex.id} onClick={() => this.handleDescriptionPage(ex.id, \"true\")} >{nomRestreint}</a>\n                        </div>\n                    </div>\n                   \n                )\n            }    \n            })\n        }\n        //On affiche les series\n        let series = this.state.topseries.map(ex => {\n\n            //Pour les nom de plus de 20 caractere (Evite de surcharger l'écran d'informations)\n            let nomRestreint=ex.original_name;\n             if (ex.original_name.length>13){\n                nomRestreint=ex.original_name.substring(0,13)+\"...\";\n            }\n\n\n\n\n            const note= (ex.vote_average*5)/10;\n            \n            if(ex.backdrop_path!==null && ex.backdrop_path!==undefined){\n                return(\n                    \n                    <div className=\"bloctop rounded-lg\" key={ex.id}> \n                        <img src={\"https://image.tmdb.org/t/p/w500/\"+ex.backdrop_path} alt={\"pic_of_\"+ex.name} width=\"100%\" height=\"150\" onClick={() => this.handleDescriptionPage(ex.id, \"true\")}/>\n                        <div className=\"stars\">\n                            <StarRatings rating={note} starRatedColor=\"yellow\" numberOfStars={5} name='rating' starDimension=\"20px\"starSpacing=\"1px\">\n                            </StarRatings>\n                        </div>\n                        <div className=\"titre\">\n                            <a id={ex.id} onClick={() => this.handleDescriptionPage(ex.id, \"true\")} >{nomRestreint}</a>\n                        </div>\n                    </div>\n                   \n                )\n            }    \n        })\n          return(\n            <div className=\"ActualitePage rounded\">\n               <div>\n                   <div className=\"topmovie\">\n                       <strong>TOP FILMS</strong>\n                   </div>\n                   {films}\n               </div>\n               <div>\n                 <div className=\"topmovie\">\n                       <strong>TOP SERIES</strong>\n                 </div>\n                 {series}\n               </div>\n\n            </div>\n          );\n    }\n}\nexport default Actualite"]},"metadata":{},"sourceType":"module"}