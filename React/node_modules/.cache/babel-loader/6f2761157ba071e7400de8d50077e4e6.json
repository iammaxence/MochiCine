{"ast":null,"code":"var _jsxFileName = \"/home/neko/git/MochiCine/React/src/ListMessages.js\";\nimport React from 'react';\nimport EcrireMessage from './EcrireMessage';\nimport axios from \"axios\";\nimport Commentaires from './Commentaires';\n\nclass ListMessages extends React.Component {\n  constructor(props) {\n    super(props); //titre, login\n\n    this.state = {\n      messages: [],\n      statut: \"\",\n      textError: \"\",\n      taille: 0\n    };\n    this.addMessage = this.addMessage.bind(this);\n    this.supprimerMessage = this.supprimerMessage.bind(this);\n  }\n\n  componentDidMount() {\n    const url = new URLSearchParams();\n    url.append('titre', this.props.titre);\n    axios.get('http://localhost:8080/MochiCine/Message/List?' + url).then(response => this.lister(response));\n  }\n\n  lister(rep) {\n    console.log(rep.data);\n\n    if (rep.data !== null) {\n      if (rep.data[\"code\"]) {\n        this.setState({\n          statut: \"error\",\n          textError: rep.data[\"message\"]\n        });\n        window.confirm(this.state.textError);\n      } else {\n        this.setState({\n          messages: rep.data[\"data\"],\n          taille: rep.data[\"data\"].length\n        });\n      }\n    }\n  } //Ajout d'un message:\n\n\n  addMessage(msg) {\n    if (msg.length > 0) {\n      try {\n        const url = new URLSearchParams();\n        url.append('login', this.props.login);\n        url.append('titre', this.props.titre);\n        url.append('text', msg);\n        axios.get('http://localhost:8080/MochiCine/Message/Add?' + url).then(response => this.updateMessage(response));\n      } catch (error) {\n        console.log(\"Axios Ajout de message\");\n      }\n    }\n  }\n\n  updateMessage(rep) {\n    console.log(\"addMessage: \", rep.data);\n\n    if (rep.data[\"code\"]) {\n      this.setState({\n        statut: \"error\",\n        textError: rep.data[\"message\"]\n      });\n      window.confirm(this.state.textError);\n    } else {\n      this.state.messages.unshift(rep.data[\"message\"]);\n      this.setState({\n        taille: this.state.taille + 1\n      });\n    }\n  } //Suppression d'un message:\n\n\n  supprimerMessage(id_message, index) {\n    if (window.confirm(\"Voulez-vous supprimer ce message ?\")) {\n      const url = new URLSearchParams();\n      url.append('id_message', id_message);\n      axios.get('http://localhost:8080/MochiCine/Message/Delete?' + url).then(response => this.delete(response, index));\n    }\n  }\n\n  delete(rep, index) {\n    if (rep.data[\"code\"]) {\n      this.setState({\n        statut: \"error\",\n        textError: rep.data[\"message\"]\n      });\n      window.confirm(this.state.textError);\n    } else {\n      const newList = Object.assign([], this.state.messages);\n      newList.splice(index, 1);\n      this.setState({\n        messages: newList\n      });\n    }\n  }\n\n  getListMessage() {\n    if (this.state.taille !== 0) {\n      return this.state.messages.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \" text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, item.date), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"list-group-item-heading text-muted text-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }, item.login), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"list-group-item-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, item.text), this.props.login === item.login ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn pull-right\",\n        onClick: () => this.supprimerMessage(item._id, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-trash-alt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 132\n        }\n      })) : /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 180\n        }\n      }, \"NOTHING\"))));\n    }\n  }\n\n  render() {\n    let box;\n    this.props.isConnected === true ? box = /*#__PURE__*/React.createElement(EcrireMessage, {\n      addMessage: this.addMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 49\n      }\n    }) : box = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 105\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"liste_message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 4\n      }\n    }, box, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }, this.getListMessage()));\n  }\n\n}\n\nexport default ListMessages;","map":{"version":3,"sources":["/home/neko/git/MochiCine/React/src/ListMessages.js"],"names":["React","EcrireMessage","axios","Commentaires","ListMessages","Component","constructor","props","state","messages","statut","textError","taille","addMessage","bind","supprimerMessage","componentDidMount","url","URLSearchParams","append","titre","get","then","response","lister","rep","console","log","data","setState","window","confirm","length","msg","login","updateMessage","error","unshift","id_message","index","delete","newList","Object","assign","splice","getListMessage","map","item","date","text","_id","render","box","isConnected"],"mappings":"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","sourcesContent":["import React from 'react';\nimport EcrireMessage from './EcrireMessage';\nimport axios from \"axios\";\nimport Commentaires from './Commentaires';\n\n\nclass ListMessages extends React.Component {\n\tconstructor(props){\n    \tsuper(props); //titre, login\n    \tthis.state={messages:[], statut: \"\", textError: \"\", taille : 0};\n    \tthis.addMessage = this.addMessage.bind(this);\n    \tthis.supprimerMessage = this.supprimerMessage.bind(this);\n\n\t}\n\tcomponentDidMount(){\n\t\tconst url = new URLSearchParams();\n \t\turl.append('titre', this.props.titre);\n \t\taxios.get('http://localhost:8080/MochiCine/Message/List?' + url).then(response => this.lister(response));\n\t}\n\n\tlister(rep){\n\t\t  console.log(rep.data);\n\t\t  if(rep.data !== null){\n\t\t\tif(rep.data[\"code\"]){\n\t\t\t\tthis.setState ({statut: \"error\", textError: rep.data[\"message\"]});\n\t\t\t\twindow.confirm(this.state.textError);\n\t\t\t}else{\n\t\t\t\tthis.setState({messages: rep.data[\"data\"], taille : rep.data[\"data\"].length});\n\t\t\t} \n\t\t}\n \t}\n\n\n \t//Ajout d'un message:\n\taddMessage(msg){\n\t\tif(msg.length >0){\n\t\t\ttry{\n\t\t\t\tconst url = new URLSearchParams();\n\t\t\t\turl.append('login',this.props.login);\n\t\t\t\turl.append('titre', this.props.titre);\n\t\t\t\turl.append('text', msg);\n\t\t\t\taxios.get('http://localhost:8080/MochiCine/Message/Add?' + url).then(response => this.updateMessage(response));\n\t\t\t}catch(error){\n\t\t\t\tconsole.log(\"Axios Ajout de message\")\n\t\t\t}\n\t\t}\n\t}\n\tupdateMessage(rep){\n\t\tconsole.log(\"addMessage: \", rep.data);\n\t\tif(rep.data[\"code\"]){\n\t  \t\tthis.setState ({statut: \"error\", textError: rep.data[\"message\"]});\n\t  \t\twindow.confirm(this.state.textError);\n\t  \t}else{\n\t\t\tthis.state.messages.unshift(rep.data[\"message\"]);\n\t\t\tthis.setState({ taille : (this.state.taille+1)});\t\t\n\t  \t}\n\n\t}\n\n\t//Suppression d'un message:\n\tsupprimerMessage(id_message, index){\n\t\tif(window.confirm(\"Voulez-vous supprimer ce message ?\")){\n\t\t\tconst url = new URLSearchParams();\n \t\t\turl.append('id_message', id_message);\n \t\t\taxios.get('http://localhost:8080/MochiCine/Message/Delete?' + url).then(response => this.delete(response, index));\n\t\t}\n    }\n    \n\tdelete(rep, index){\n\t\tif(rep.data[\"code\"]){\n\t  \t\tthis.setState ({statut: \"error\", textError: rep.data[\"message\"]});\n\t  \t\twindow.confirm(this.state.textError);\n\t  \t}else{\n\t  \t\tconst newList = Object.assign([], this.state.messages);\n\t  \t\tnewList.splice(index,1);\n\t  \t\tthis.setState({messages: newList});\n\t  \t}\n\t}\n\n\n\tgetListMessage(){\n\t\tif(this.state.taille !== 0){\n\t\t\treturn(\n\t\t\t\tthis.state.messages.map((item, index) => \n\t\t\t\t<li className=\"list-group-item\">\n            \t\t<small className=\" text-muted\">{item.date}</small>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<small className=\"list-group-item-heading text-muted text-primary\">{item.login}</small>\n\t\t\t\t\t\t<p className=\"list-group-item-text\">\n\t\t\t\t\t\t\t{item.text}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t{(this.props.login === item.login)? <button className=\"btn pull-right\" onClick={()=> this.supprimerMessage(item._id, index)}><i className=\"fas fa-trash-alt\"></i></button> : <p>NOTHING</p>}\n\t\t\t\t\t</div>\n\n\t\t\t\t</li>\n\t\t\t\t\t));\n\t\t}\n\t}\n\n\trender(){\n\t\tlet box;\n        (this.props.isConnected === true)? box =<EcrireMessage  addMessage={this.addMessage} /> : box = <div></div>;\n\n\t\treturn(\n\t\t\t<div className=\"liste_message\">\n\t\t\t\t{box}\n\t\t\t\t<ul class=\"list-group\">\n\t\t\t\t\t{this.getListMessage()}\n\t\t\t\t</ul>\n\t\t\t\t\n\n\t\t\t</div>\t\n        );\n\t}\n}\n\nexport default ListMessages;"]},"metadata":{},"sourceType":"module"}