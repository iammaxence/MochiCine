{"ast":null,"code":"var _jsxFileName = \"/home/maxlamenace/PC3R/mochicine/src/Calendrier.js\";\nimport React, { Component } from 'react';\nimport './Calendrier.css';\nimport axios from 'axios';\n\nclass Calendrier extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lundiListe: [],\n      mardiListe: []\n    };\n    this.constr = this.constr.bind(this);\n  }\n\n  componentDidMount() {\n    //Today release\n    axios.get(\"https://api.themoviedb.org/3/tv/airing_today?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US&page=1\").then(res => this.constr(res)); //Future release\n\n    let mo = [5];\n    axios.get(\"https://api.themoviedb.org/3/tv/on_the_air?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US&page=1\").then(res => res.data.results).then(ex => {\n      // Today's date\n      let today = new Date();\n      today.setDate(today.getDate() - 3);\n      today.setHours(0, 0, 0, 0); //Find the serie to find the date of the last episode\n\n      console.log(ex.id);\n      axios.get(\"https://api.themoviedb.org/3/tv/\" + ex.id + \"?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US\").then(v => {\n        console.log(v);\n        let tvserie = v.data;\n        let exdate = new Date(tvserie.last_air_date);\n        exdate.setHours(0, 0, 0, 0); //console.log(today.getTime()+\"==\"+exdate.getTime());\n\n        if (today.getTime() === exdate.getTime()) {\n          mo.push(v);\n        }\n      });\n    }); //console.log(mo);\n  }\n\n  constr(res) {\n    const listeoftv = res.data.results;\n    this.setState({\n      liste: listeoftv\n    }); //console.log(this.state.liste);\n  }\n\n  constrMardi(res) {\n    const listeoftv = res.data.results;\n    this.setState({\n      lundiListe: listeoftv\n    });\n    /*\n    let today= new Date();\n    today.setDate(today.getDate()-3);\n    today.setHours(0,0,0,0);\n     //console.log(\"original: \"+today.getTime());\n    const listeoftv=res.data.results;\n    let mo =[]; // On récupère que les 5 premiers pour le calendrier\n    let mardi= listeoftv.map(ex => {\n        let tmp= new Array(5);\n        let promise= axios.get(\"https://api.themoviedb.org/3/tv/\"+ex.id+\"?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US\").then(res=> {return res});\n        promise.then(v => {\n            let exdate= new Date(v.data.last_air_date);\n            exdate.setHours(0,0,0,0);\n            //console.log(today.getTime()+\"==\"+exdate.getTime());\n            if (today.getTime()===exdate.getTime()) \n                {\n                mo.push(ex);\n                } \n            })\n            //console.log(mo);\n            this.setState({lundiListe: mo});\n    })\n    //console.log(mo);\n    //this.setState({mardiListe : listeoftv});\n    //console.log(this.state.mardiListe);\n    */\n  }\n\n  render() {\n    //console.log(this.state.lundiListe);\n\n    /*\n            let tmp = this.state.lundiListe.map(ex => {\n                // Today's date\n                let today= new Date();\n                today.setDate(today.getDate()-3);\n                today.setHours(0,0,0,0);\n    \n                //Find the serie to find the date of the last episode\n                let promise= axios.get(\"https://api.themoviedb.org/3/tv/\"+ex.id+\"?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US\").then(res=> {return res});\n                promise.then(v => {\n                    let tvserie=v.data;\n                    let exdate= new Date(tvserie.last_air_date);\n                    exdate.setHours(0,0,0,0);\n                    //console.log(today.getTime()+\"==\"+exdate.getTime());\n                    if (today.getTime()===exdate.getTime()) \n                        {\n                            console.log(tvserie.name);\n                            return(\n                                <div className=\"test\"> \n                                    <img src={\"https://image.tmdb.org/t/p/w500/\"+tvserie.backdrop_path} alt={\"pic_of_\"+tvserie.name} width=\"130\" height=\"150\"/>\n                                    <div>\n                                        <button id= \"name\" onClick={() => this.getSerieById(tvserie.id)} >{tvserie.name}</button>\n                                    </div>\n                                </div>\n                            )\n                        } \n                    })\n     \n                return(\n                    <div className=\"test\"> \n                        <img src={\"https://image.tmdb.org/t/p/w500/\"+ex.backdrop_path} alt={\"pic_of_\"+ex.name} width=\"130\" height=\"150\"/>\n                        <div>\n                            <button id= \"name\" onClick={() => this.getSerieById(ex.id)} >{ex.name}</button>\n                        </div>\n                    </div>\n                )\n          \n            })\n    \n            */\n    //console.log(tmp);\n    //axios.get(\"https://api.themoviedb.org/3/tv/airing_today?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US&page=1\").then(res=> this.constr(res));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Rectangle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Jours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, \" Lundi \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Jours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, \" Mardi \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Jours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, \" Mercredi \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Jours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, \" Jeudi \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Jours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, \" Vendredi \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Jours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, \" Samedi \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Jours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, \" Dimanche \")));\n  }\n\n}\n\nexport default Calendrier;","map":{"version":3,"sources":["/home/maxlamenace/PC3R/mochicine/src/Calendrier.js"],"names":["React","Component","axios","Calendrier","constructor","props","state","lundiListe","mardiListe","constr","bind","componentDidMount","get","then","res","mo","data","results","ex","today","Date","setDate","getDate","setHours","console","log","id","v","tvserie","exdate","last_air_date","getTime","push","listeoftv","setState","liste","constrMardi","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Calendrier.css';\nimport axios from 'axios';\n\nclass Calendrier extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={lundiListe : [], mardiListe: []};\n        this.constr=this.constr.bind(this);\n    }\n\n    componentDidMount(){\n        //Today release\n        axios.get(\"https://api.themoviedb.org/3/tv/airing_today?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US&page=1\").then(res=> this.constr(res));\n        \n        //Future release\n        let mo=[5];\n        axios.get(\"https://api.themoviedb.org/3/tv/on_the_air?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US&page=1\").then(res=> res.data.results).then(\n            ex => {\n                \n                // Today's date\n                let today= new Date();\n                today.setDate(today.getDate()-3);\n                today.setHours(0,0,0,0);\n                //Find the serie to find the date of the last episode\n                console.log(ex.id);\n                axios.get(\"https://api.themoviedb.org/3/tv/\"+ex.id+\"?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US\").then(\n                    v => {\n                    console.log(v);\n                    let tvserie=v.data;\n                    let exdate= new Date(tvserie.last_air_date);\n                    exdate.setHours(0,0,0,0);\n                    //console.log(today.getTime()+\"==\"+exdate.getTime());\n                    if (today.getTime()===exdate.getTime()) \n                        {\n                            mo.push(v);\n                        } \n                    })\n                    \n                });\n        //console.log(mo);\n\t}\n\n    constr(res){\n        const listeoftv=res.data.results;\n        this.setState({liste : listeoftv});\n        //console.log(this.state.liste);\n    }\n\n    constrMardi(res){\n        const listeoftv=res.data.results;\n        this.setState({lundiListe : listeoftv});\n\n\n        /*\n        let today= new Date();\n        today.setDate(today.getDate()-3);\n        today.setHours(0,0,0,0);\n\n        //console.log(\"original: \"+today.getTime());\n        const listeoftv=res.data.results;\n        let mo =[]; // On récupère que les 5 premiers pour le calendrier\n        let mardi= listeoftv.map(ex => {\n            let tmp= new Array(5);\n            let promise= axios.get(\"https://api.themoviedb.org/3/tv/\"+ex.id+\"?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US\").then(res=> {return res});\n            promise.then(v => {\n                let exdate= new Date(v.data.last_air_date);\n                exdate.setHours(0,0,0,0);\n                //console.log(today.getTime()+\"==\"+exdate.getTime());\n                if (today.getTime()===exdate.getTime()) \n                    {\n                    mo.push(ex);\n                    } \n                })\n                //console.log(mo);\n                this.setState({lundiListe: mo});\n        })\n        //console.log(mo);\n        //this.setState({mardiListe : listeoftv});\n        //console.log(this.state.mardiListe);\n        */\n    }\n    \n    render(){\n\n        //console.log(this.state.lundiListe);\n/*\n        let tmp = this.state.lundiListe.map(ex => {\n            // Today's date\n            let today= new Date();\n            today.setDate(today.getDate()-3);\n            today.setHours(0,0,0,0);\n\n            //Find the serie to find the date of the last episode\n            let promise= axios.get(\"https://api.themoviedb.org/3/tv/\"+ex.id+\"?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US\").then(res=> {return res});\n            promise.then(v => {\n                let tvserie=v.data;\n                let exdate= new Date(tvserie.last_air_date);\n                exdate.setHours(0,0,0,0);\n                //console.log(today.getTime()+\"==\"+exdate.getTime());\n                if (today.getTime()===exdate.getTime()) \n                    {\n                        console.log(tvserie.name);\n                        return(\n                            <div className=\"test\"> \n                                <img src={\"https://image.tmdb.org/t/p/w500/\"+tvserie.backdrop_path} alt={\"pic_of_\"+tvserie.name} width=\"130\" height=\"150\"/>\n                                <div>\n                                    <button id= \"name\" onClick={() => this.getSerieById(tvserie.id)} >{tvserie.name}</button>\n                                </div>\n                            </div>\n                        )\n                    } \n                })\n \n            return(\n                <div className=\"test\"> \n                    <img src={\"https://image.tmdb.org/t/p/w500/\"+ex.backdrop_path} alt={\"pic_of_\"+ex.name} width=\"130\" height=\"150\"/>\n                    <div>\n                        <button id= \"name\" onClick={() => this.getSerieById(ex.id)} >{ex.name}</button>\n                    </div>\n                </div>\n            )\n      \n        })\n\n        */\n        //console.log(tmp);\n        //axios.get(\"https://api.themoviedb.org/3/tv/airing_today?api_key=a3be1be132d237a0716cc27bdae1b2f0&language=en-US&page=1\").then(res=> this.constr(res));\n        return (\n            <div className=\"Rectangle\">\n                <div className=\"Jours\">\n                    <strong> Lundi </strong>\n                </div>\n               \n                <div className=\"Jours\">\n                    <strong> Mardi </strong>\n                </div>\n                <div className=\"Jours\">\n                    <strong> Mercredi </strong>\n                </div>\n                <div className=\"Jours\">\n                    <strong> Jeudi </strong>\n                </div>\n                <div className=\"Jours\">\n                    <strong> Vendredi </strong>\n                </div>\n                <div className=\"Jours\">\n                    <strong> Samedi </strong>\n                </div>\n                <div className=\"Jours\">\n                    <strong> Dimanche </strong>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Calendrier;"]},"metadata":{},"sourceType":"module"}