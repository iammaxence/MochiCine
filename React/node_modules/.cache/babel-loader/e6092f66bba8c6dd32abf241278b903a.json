{"ast":null,"code":"var _jsxFileName = \"/home/maxlamenace/eclipse_work2/MochiCine/React/src/Actualite.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport \"./Actualite.css\";\nimport StarRatings from '../node_modules/react-star-ratings';\nimport favEmpty from './icons/favEmpty.png';\nimport favFull from './icons/favFull.png';\n\nclass Actualite extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topmovies: [],\n      topseries: []\n    };\n  }\n\n  componentDidMount() {\n    // Recuperation top series et films\n    let key = \"a3be1be132d237a0716cc27bdae1b2f0\";\n    let count = 6;\n    let type = \"movie\";\n    axios.get(\"http://localhost:8080/MochiCine/Tendances?key=\" + key + \"&count=\" + count + \"&type=\" + type).then(res => this.setState({\n      topmovies: res.data.data\n    }));\n    type = \"tv\";\n    axios.get(\"http://localhost:8080/MochiCine/Tendances?key=\" + key + \"&count=\" + count + \"&type=\" + type).then(res => this.setState({\n      topseries: res.data.data\n    }));\n  }\n\n  render() {\n    //On affiche les films\n    let films = this.state.topmovies.map(ex => {\n      //Pour les nom de plus de 20 caractere (Evite de surcharger l'écran d'informations)\n      let nomRestreint = ex.original_title;\n\n      if (ex.original_title.length > 13) {\n        nomRestreint = ex.original_title.substring(0, 13) + \"...\";\n      }\n\n      const note = ex.vote_average * 5 / 10;\n\n      if (ex.backdrop_path !== null && ex.backdrop_path !== undefined) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"bloctop rounded-lg\",\n          key: ex.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"https://image.tmdb.org/t/p/w500/\" + ex.backdrop_path,\n          alt: \"pic_of_\" + ex.title,\n          width: \"100%\",\n          height: \"150\",\n          onClick: () => this.handleDescriptionPage(ex.id, \"true\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"stars\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(StarRatings, {\n          rating: note,\n          starRatedColor: \"yellow\",\n          numberOfStars: 5,\n          name: \"rating\",\n          starDimension: \"20px\",\n          starSpacing: \"1px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"titre\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          id: ex.id,\n          onClick: () => this.handleDescriptionPage(ex.id, \"true\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }\n        }, nomRestreint)));\n      }\n    }); //On affiche les series\n\n    let series = this.state.topseries.map(ex => {\n      //Pour les nom de plus de 20 caractere (Evite de surcharger l'écran d'informations)\n      let nomRestreint = ex.original_name;\n\n      if (ex.original_name.length > 13) {\n        nomRestreint = ex.original_name.substring(0, 13) + \"...\";\n      }\n\n      const note = ex.vote_average * 5 / 10;\n\n      if (ex.backdrop_path !== null && ex.backdrop_path !== undefined) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"bloctop rounded-lg\",\n          key: ex.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"https://image.tmdb.org/t/p/w500/\" + ex.backdrop_path,\n          alt: \"pic_of_\" + ex.name,\n          width: \"100%\",\n          height: \"150\",\n          onClick: () => this.handleDescriptionPage(ex.id, \"true\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"stars\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(StarRatings, {\n          rating: note,\n          starRatedColor: \"yellow\",\n          numberOfStars: 5,\n          name: \"rating\",\n          starDimension: \"20px\",\n          starSpacing: \"1px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"titre\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          id: ex.id,\n          onClick: () => this.handleDescriptionPage(ex.id, \"true\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }\n        }, nomRestreint)));\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ActualitePage rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topmovie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 24\n      }\n    }, \"TOP FILMS\")), films), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topmovie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 24\n      }\n    }, \"TOP SERIES\")), series));\n  }\n\n}\n\nexport default Actualite;","map":{"version":3,"sources":["/home/maxlamenace/eclipse_work2/MochiCine/React/src/Actualite.js"],"names":["React","axios","StarRatings","favEmpty","favFull","Actualite","Component","constructor","props","state","topmovies","topseries","componentDidMount","key","count","type","get","then","res","setState","data","render","films","map","ex","nomRestreint","original_title","length","substring","note","vote_average","backdrop_path","undefined","id","title","handleDescriptionPage","series","original_name","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport \"./Actualite.css\"\nimport StarRatings from '../node_modules/react-star-ratings';\nimport favEmpty from './icons/favEmpty.png';\nimport favFull from './icons/favFull.png';\n\nclass Actualite extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= {topmovies : [],topseries : []}\n    }\n\n\ncomponentDidMount(){\n    // Recuperation top series et films\n    let key = \"a3be1be132d237a0716cc27bdae1b2f0\";\n    let count= 6;\n    let type= \"movie\";\n    axios.get(\"http://localhost:8080/MochiCine/Tendances?key=\"+key+\"&count=\"+count+\"&type=\"+type).then(res=> this.setState({topmovies: res.data.data}));\n\n    type= \"tv\";\n    axios.get(\"http://localhost:8080/MochiCine/Tendances?key=\"+key+\"&count=\"+count+\"&type=\"+type).then(res=> this.setState({topseries: res.data.data}));\n       \n    }    \n\n\n\n    render(){\n        //On affiche les films\n        let films = this.state.topmovies.map(ex => {\n\n            //Pour les nom de plus de 20 caractere (Evite de surcharger l'écran d'informations)\n            let nomRestreint=ex.original_title;\n             if (ex.original_title.length>13){\n                nomRestreint=ex.original_title.substring(0,13)+\"...\";\n            }\n\n\n\n\n            const note= (ex.vote_average*5)/10;\n            \n            if(ex.backdrop_path!==null && ex.backdrop_path!==undefined){\n                return(\n                    \n                    <div className=\"bloctop rounded-lg\" key={ex.id}> \n                        <img src={\"https://image.tmdb.org/t/p/w500/\"+ex.backdrop_path} alt={\"pic_of_\"+ex.title} width=\"100%\" height=\"150\" onClick={() => this.handleDescriptionPage(ex.id, \"true\")}/>\n                        <div className=\"stars\">\n                            <StarRatings rating={note} starRatedColor=\"yellow\" numberOfStars={5} name='rating' starDimension=\"20px\"starSpacing=\"1px\">\n                            </StarRatings>\n                        </div>\n                        <div className=\"titre\">\n                            <a id={ex.id} onClick={() => this.handleDescriptionPage(ex.id, \"true\")} >{nomRestreint}</a>\n                        </div>\n                    </div>\n                   \n                )\n            }    \n        })\n\n        //On affiche les series\n        let series = this.state.topseries.map(ex => {\n\n            //Pour les nom de plus de 20 caractere (Evite de surcharger l'écran d'informations)\n            let nomRestreint=ex.original_name;\n             if (ex.original_name.length>13){\n                nomRestreint=ex.original_name.substring(0,13)+\"...\";\n            }\n\n\n\n\n            const note= (ex.vote_average*5)/10;\n            \n            if(ex.backdrop_path!==null && ex.backdrop_path!==undefined){\n                return(\n                    \n                    <div className=\"bloctop rounded-lg\" key={ex.id}> \n                        <img src={\"https://image.tmdb.org/t/p/w500/\"+ex.backdrop_path} alt={\"pic_of_\"+ex.name} width=\"100%\" height=\"150\" onClick={() => this.handleDescriptionPage(ex.id, \"true\")}/>\n                        <div className=\"stars\">\n                            <StarRatings rating={note} starRatedColor=\"yellow\" numberOfStars={5} name='rating' starDimension=\"20px\"starSpacing=\"1px\">\n                            </StarRatings>\n                        </div>\n                        <div className=\"titre\">\n                            <a id={ex.id} onClick={() => this.handleDescriptionPage(ex.id, \"true\")} >{nomRestreint}</a>\n                        </div>\n                    </div>\n                   \n                )\n            }    \n        })\n          return(\n            <div className=\"ActualitePage rounded\">\n               <div>\n                   <div className=\"topmovie\">\n                       <strong>TOP FILMS</strong>\n                   </div>\n                   {films}\n               </div>\n               <div>\n                 <div className=\"topmovie\">\n                       <strong>TOP SERIES</strong>\n                 </div>\n                 {series}\n               </div>\n\n            </div>\n          );\n    }\n}\nexport default Actualite"]},"metadata":{},"sourceType":"module"}