{"ast":null,"code":"var _jsxFileName = \"/home/neko/git/MochiCine/React/src/SearchPage.js\";\nimport React from 'react';\nimport NavBar from './NavBar';\nimport axios from 'axios';\nimport './SearchPage.css';\n\nclass SearchPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.state = {\n      listeRecherche: [],\n      userFav: this.props.listFavoris\n    };\n    this.addToList = this.addToList.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    axios.get(\"http://localhost:8080/MochiCine/Search?key=a3be1be132d237a0716cc27bdae1b2f0&keyword=\" + this.props.keyword).then(res => this.addToList(res.data.data));\n  }\n\n  componentDidUpdate(prevProps) {\n    //console.log(this.props.keyword+\" == \"+prevProps.keyword);\n    if (this.props.keyword !== prevProps.keyword && this._isMounted === true) {\n      this.setState({\n        listeRecherche: this.props.keyword\n      });\n      axios.get(\"http://localhost:8080/MochiCine/Search?key=a3be1be132d237a0716cc27bdae1b2f0&keyword=\" + this.props.keyword).then(res => this.addToList(res.data.data));\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    this.setState({\n      listeRecherche: []\n    });\n  }\n\n  formatDate(string) {\n    var options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(string).toLocaleDateString([], options);\n  }\n\n  addToList(res) {\n    //console.log(res);\n    if (this._isMounted) this.setState({\n      listeRecherche: res\n    });else alert(\"nope\");\n  } // GESTION DESCRIPTION PAGE\n\n\n  handleDescriptionPage(id, isMovie) {\n    const url = new URLSearchParams();\n    url.append('id', id);\n    url.append('isMovie', isMovie);\n    axios.get('http://localhost:8080/MochiCine/GetDescription?' + url).then(response => this.getDescription(response));\n  }\n\n  getDescription(rep) {\n    console.log(\"data of Description: \", rep.data);\n\n    if (rep.data != null) {\n      if (rep.data[\"code\"]) {\n        window.confirm(this.state.textError);\n      } else {\n        this.props.getDescriptionPage(rep.data[\"info\"]);\n      }\n    }\n  }\n\n  render() {\n    //console.log(document.getElementById(\"recherche\").value);\n    let tmp;\n    console.log(this.state.listeRecherche);\n\n    if (this.state.listeRecherche === undefined || this.state.listeRecherche.length === 0) {\n      tmp = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 23\n        }\n      }, \"Nothing found..\"));\n    } else if (!Array.isArray(this.state.listeRecherche)) {\n      //Cette condition est obligatoire car lorsque la navbar appel ce composant, il est démonté puis remonté. Il n'est pas monté assez rapidement pour laisser le temps à la requête d'être terminé\n      tmp = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 23\n        }\n      }, \"Chargement en cours..\"));\n    } else {\n      tmp = this.state.listeRecherche.map(ex => {\n        //console.log(ex);\n        let choix = ex.media_type; // Favoris button\n\n        let btn;\n        let isSerie;\n        choix === \"movie\" ? isSerie = \"false\" : isSerie = \"true\";\n        let titre = ex.original_title || ex.original_name;\n\n        if (this.props.listFavoris.includes(titre)) {\n          btn = /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 26\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            className: \"btn btn-sm btn-outline-danger\",\n            type: \"button\",\n            onClick: () => this.props.deleteFavoris(ex.id, titre, isSerie),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }\n          }, \"Delete Favoris\"));\n        } else {\n          btn = /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 26\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            className: \"btn btn-sm btn-outline-success\",\n            type: \"button\",\n            onClick: () => this.props.addFavoris(ex.id, titre, isSerie),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }\n          }, \"Add Favoris\"));\n        } // Parfois c'est title parfois c'est name pour chaque séries/films\n\n\n        if (ex.backdrop_path !== null && ex.backdrop_path !== undefined) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"affiches col-md-11 bg-white text-dark\",\n            key: ex.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"blog-entry  col-12\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            id: \"leftbox\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: \"https://image.tmdb.org/t/p/w500/\" + ex.backdrop_path,\n            alt: \"pic_of_\" + ex.title,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"description\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"text text-2 text-center pl-md-4\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            className: \"mb-2\",\n            onClick: () => this.handleDescriptionPage(ex.id, !isSerie),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 41\n            }\n          }, ex.original_title || ex.original_name)), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"meta-wrap\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"meta\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"far fa-calendar-alt mr-2\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 51\n            }\n          }), this.formatDate(ex.first_air_date || ex.release_date)), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"fas fa-fire-alt mr-2\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 51\n            }\n          }), ex.popularity), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"fas fa-tv mr-2\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 51\n            }\n          }), choix, \" \"))), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"mb-4\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 37\n            }\n          }, ex.overview), btn)));\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      isConnected: this.props.isConnected,\n      getLoginPage: this.props.getLoginPage,\n      setLogout: this.props.setLogout,\n      getProfilPage: this.props.getProfilPage,\n      getAccueilPage: this.props.getAccueilPage,\n      getSearchPage: this.props.getSearchPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchPage col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pt-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, tmp)));\n  }\n\n}\n\nexport default SearchPage;","map":{"version":3,"sources":["/home/neko/git/MochiCine/React/src/SearchPage.js"],"names":["React","NavBar","axios","SearchPage","Component","constructor","props","_isMounted","state","listeRecherche","userFav","listFavoris","addToList","bind","componentDidMount","get","keyword","then","res","data","componentDidUpdate","prevProps","setState","componentWillUnmount","formatDate","string","options","year","month","day","Date","toLocaleDateString","alert","handleDescriptionPage","id","isMovie","url","URLSearchParams","append","response","getDescription","rep","console","log","window","confirm","textError","getDescriptionPage","render","tmp","undefined","length","Array","isArray","map","ex","choix","media_type","btn","isSerie","titre","original_title","original_name","includes","deleteFavoris","addFavoris","backdrop_path","title","first_air_date","release_date","popularity","overview","isConnected","getLoginPage","setLogout","getProfilPage","getAccueilPage","getSearchPage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NavBar from './NavBar';\nimport axios from 'axios';\nimport './SearchPage.css'\n\nclass SearchPage extends React.Component{\n    _isMounted = false\n\n    constructor(props){\n        super(props);\n        this.state={listeRecherche: [], userFav: this.props.listFavoris};\n        this.addToList=this.addToList.bind(this);\n    }\n\n   \n    componentDidMount(){\n       this._isMounted=true;\n        axios.get(\"http://localhost:8080/MochiCine/Search?key=a3be1be132d237a0716cc27bdae1b2f0&keyword=\"+this.props.keyword).then(res => this.addToList(res.data.data));\n     }\n\n    \n    componentDidUpdate(prevProps){\n        //console.log(this.props.keyword+\" == \"+prevProps.keyword);\n        if(this.props.keyword !== prevProps.keyword && this._isMounted===true){\n            this.setState({listeRecherche: this.props.keyword});\n            axios.get(\"http://localhost:8080/MochiCine/Search?key=a3be1be132d237a0716cc27bdae1b2f0&keyword=\"+this.props.keyword).then(res => this.addToList(res.data.data));\n        }\n    }\n    \n\n    componentWillUnmount(){\n       this._isMounted =false\n       this.setState({listeRecherche: []});\n    }\n\n    formatDate(string){\n        var options = { year: 'numeric', month: 'long', day: 'numeric' };\n        return new Date(string).toLocaleDateString([],options);\n    }\n\n    addToList(res){\n        //console.log(res);\n        if(this._isMounted)\n            this.setState({listeRecherche: res});\n        else\n            alert(\"nope\");\n    }\n\n    // GESTION DESCRIPTION PAGE\n    handleDescriptionPage(id, isMovie){\n        const url = new URLSearchParams();\n        url.append('id',id);\n        url.append('isMovie',isMovie);\n        axios.get('http://localhost:8080/MochiCine/GetDescription?'+url).then(response => this.getDescription(response));\n    \n    }\n\n    getDescription(rep){\n        console.log(\"data of Description: \", rep.data);\n        if(rep.data != null){\n            if(rep.data[\"code\"]){\n                window.confirm(this.state.textError);\n            }else{\n                this.props.getDescriptionPage(rep.data[\"info\"]);\n            } \n        }\n    }\n\n    render(){\n        //console.log(document.getElementById(\"recherche\").value);\n        let tmp;\n        console.log(this.state.listeRecherche);\n        \n        if (this.state.listeRecherche === undefined || this.state.listeRecherche.length === 0 ){\n            tmp= <div><strong>Nothing found..</strong></div>\n        }\n        else if (!Array.isArray(this.state.listeRecherche)) { //Cette condition est obligatoire car lorsque la navbar appel ce composant, il est démonté puis remonté. Il n'est pas monté assez rapidement pour laisser le temps à la requête d'être terminé\n            tmp= <div><strong>Chargement en cours..</strong></div>\n        } \n        else {\n            tmp= this.state.listeRecherche.map(ex => {\n                //console.log(ex);\n                \n                let choix = ex.media_type;\n\n                // Favoris button\n                let btn;\n                let isSerie;\n                (choix === \"movie\")? isSerie = \"false\" : isSerie = \"true\";\n                let titre = (ex.original_title || ex.original_name);\n                if(this.props.listFavoris.includes(titre)){\n                    btn =<p>\n                            <button className=\"btn btn-sm btn-outline-danger\" type=\"button\" onClick={() => this.props.deleteFavoris(ex.id, titre, isSerie)}>Delete Favoris</button>\n                        </p>\n                }\n                else{\n                    btn =<p>\n                            <button className=\"btn btn-sm btn-outline-success\" type=\"button\" onClick={() => this.props.addFavoris(ex.id, titre, isSerie)}>Add Favoris</button>\n                        </p>\n                }\n                // Parfois c'est title parfois c'est name pour chaque séries/films\n                if(ex.backdrop_path!==null && ex.backdrop_path!==undefined){\n                    return (\n                            <div className=\"affiches col-md-11 bg-white text-dark\" key={ex.id}>\n                            <div className=\"blog-entry  col-12\">\n                                <div id = \"leftbox\" >\n                                    <img src={\"https://image.tmdb.org/t/p/w500/\"+ex.backdrop_path} alt={\"pic_of_\"+ex.title}   />\n                                </div>\n                                <div className= \"description\">\n                                    <div className=\"text text-2 text-center pl-md-4\">\n                                        <h3 className=\"mb-2\"  onClick={() => this.handleDescriptionPage(ex.id, !isSerie)} >{(ex.original_title || ex.original_name)}</h3>\n                                    </div>\n                                    <div className=\"meta-wrap\">\n                                        <p className=\"meta\">\n                                            <span><i className=\"far fa-calendar-alt mr-2\"></i>{this.formatDate((ex.first_air_date || ex.release_date))}</span>\n                                            &nbsp;&nbsp;&nbsp;&nbsp;\n                                            <span><i className=\"fas fa-fire-alt mr-2\"></i>{ex.popularity}</span>\n                                            &nbsp;&nbsp;&nbsp;&nbsp;\n                                            <span><i className=\"fas fa-tv mr-2\"></i>{ choix } </span>\n                                        </p>\n                                    </div>\n                                    <p className=\"mb-4\">\n                                        {ex.overview}\n                                    </p>\n                                    {btn}\n                                </div>\n                            </div>\n                            </div>\n                    )\n                }\n            })\n        }\n        \n        return(\n            <div >\n                <NavBar \n                    isConnected={this.props.isConnected} \n                    getLoginPage={this.props.getLoginPage}\n                    setLogout={this.props.setLogout}\n                    getProfilPage={this.props.getProfilPage}\n                    getAccueilPage={this.props.getAccueilPage} \n                    getSearchPage={this.props.getSearchPage}/>\n                <div className=\"searchPage col\">\n                    <div className=\"row pt-md-3\">\n                        {tmp}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchPage;"]},"metadata":{},"sourceType":"module"}